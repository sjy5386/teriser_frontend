{"version":3,"sources":["pages/HomePage.tsx","components/LabelInput.tsx","components/Button.tsx","modules/client.ts","components/Card.tsx","hooks/useInputs.tsx","hooks/useArray.tsx","components/Alert.tsx","components/AlertGroup.tsx","pages/RegisterPage.tsx","pages/LoginPage.tsx","pages/LogoutPage.tsx","pages/PointCardsPage.tsx","pages/CheckoutPage.tsx","modules/iamport.ts","pages/AddProjectPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HomePage","className","to","LabelInput","label","name","type","placeholder","value","onChange","children","htmlFor","id","Button","variant","onClick","client","axios","create","baseURL","withCredentials","register","email","post","login","loginToken","setBearer","token","defaults","headers","common","undefined","chargePoint","request","put","CardTitle","rest","CardSubtitle","CardBody","Card","reducer","state","action","initialState","Object","keys","forEach","key","useInputs","defaultValues","useReducer","dispatch","useCallback","e","target","useArray","initialArray","useState","array","setArray","add","remove","filter","a","Alert","role","AlertGroup","alerts","map","alert","index","RegisterPage","inputs","addAlert","requestRegister","message","response","data","error","LoginPage","step","loginResult","localStorage","setItem","JSON","stringify","setStep","steps","length","bind","LogoutPage","removeItem","delete","then","console","log","catch","PointCardsPage","pointCards","setPointCards","loadPointCards","get","useEffect","togglePointCard","pointCard","includes","point","price","reduce","accumulator","currentValue","pathname","cart","CheckoutPage","props","location","amount","buyer_email","buyer_name","buyer_tel","pay_method","set_pay_method","jqueryScript","document","createElement","src","head","appendChild","iamportScript","importIamport","requestPay","paymentItems","push","seq","quantity","payment","window","IMP","merchant_uid","orderId","init","request_pay","pg","rsp","success","receiptId","imp_uid","error_msg","defaultChecked","AddProjectPage","title","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.aa03c9a5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <Link to=\"/login\" className=\"btn btn-outline-primary\">Login</Link>\r\n            <Link to=\"/register\" className=\"btn btn-primary\">Register</Link>\r\n            <Link to=\"/point-cards\">Point cards</Link>\r\n            <Link to=\"/add-project\">Add project</Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\ntype LabelInputType = 'text' | 'email' | 'password' | 'tel';\n\nexport interface LabelInputProps extends React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> {\n    label: string;\n    name?: string;\n    type?: LabelInputType;\n    placeholder?: string;\n    value?: string;\n    onChange?: React.ChangeEventHandler;\n}\n\nconst LabelInput: React.FC<LabelInputProps> = ({\n                                                   label, name, type, placeholder, value, onChange, className, children\n                                               }: LabelInputProps) => {\n    return (\n        <div className={`mb-3 ${className}`}>\n            <label className=\"form-label\" htmlFor={name}>{label}</label>\n            <input id={name} className=\"form-control\" name={name} type={type} placeholder={placeholder} value={value}\n                   onChange={onChange}/>\n            {children}\n        </div>\n    )\n};\n\nexport default LabelInput;\n","import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {OutlineColorVariant} from \"../types/ColorVariant\";\n\ninterface ButtonProps extends React.HTMLProps<HTMLButtonElement> {\n    variant?: OutlineColorVariant;\n    onClick?: React.MouseEventHandler;\n}\n\nconst Button: React.FC<ButtonProps> = ({variant, onClick, className, children}: ButtonProps) => {\n    return (\n        <button type=\"button\" className={`btn btn-${variant} ${className}`} onClick={onClick}>{children}</button>\n    )\n};\n\nexport default Button;\n","import axios from \"axios\";\n\nconst client = axios.create({\n    baseURL: process.env.NODE_ENV === 'development' ? '/' : 'https://teriser.codrest.com',\n    withCredentials: true\n});\n\nexport interface ClientResponse<T> {\n    success: boolean;\n    response: T | null;\n    error: ClientError | null;\n}\n\nexport interface ClientError {\n    message: string;\n    status: number;\n}\n\nexport interface LoginResult {\n    token: string;\n    name: string;\n    email: string;\n}\n\nexport const register = (name: string, email: string) => client.post('/developers/account', {name, email});\nexport const login = (email: string, loginToken: string) => client.post('/developers/sign', {email, loginToken});\nexport const logout = () => client.delete('/developers/sign');\n\nexport function setBearer(token?: string) {\n    client.defaults.headers.common['X-TERISER-AUTH'] = token ? `Bearer ${token}` : undefined;\n}\n\nexport interface ProjectRequest {\n    title: string;\n}\n\nexport const findAllProjects = () => client.get('/projects');\nexport const findProjectById = (id: number) => client.get(`/projects/${id}`);\nexport const addProject = (request: ProjectRequest) => client.post('/projects', request);\nexport const editProject = (id: number, request: ProjectRequest) => client.patch(`/project/${id}`, request);\nexport const removeProject = (id: number) => client.delete(`/project/${id}`);\n\nexport interface Item {\n    seq: number;\n    name: string;\n    price: number;\n}\n\nexport const findAllItems = () => client.get('/store/items');\nexport const findItemById = (id: number) => client.get(`/store/items/${id}`);\n\nexport interface PointCard {\n    seq: number;\n    name: string;\n    point: number;\n    price: number;\n    available: boolean;\n}\n\nexport const findAllPointCards = () => client.get('/store/point');\n\nexport interface Payment {\n    buyer: string;\n    orderId: string;\n    method: PaymentMethod;\n    name: string;\n    amount: number;\n    status: PaymentStatus;\n    createAt: string;\n    paidAt: string;\n    failedAt: string;\n    cancelledAmount: number;\n    cancelledAt: string;\n}\n\nexport type PaymentMethod = 'card' | 'trans' | 'vbank' | 'phone';\nexport type PaymentStatus = 'ready' | 'paid' | 'failed' | 'cancelled';\n\nexport interface PaymentPointCard {\n    id: number;\n    quantity: number;\n}\n\nexport const requestPayment = (request: Array<PaymentPointCard>) => client.post('/store/payments', request);\n\nexport interface PointRequest {\n    receiptId: string;\n    orderId: string;\n}\n\nexport interface Point {\n    owner: string;\n    name: string;\n    amount: number;\n    balance: number;\n    createAt: string;\n}\n\nexport const chargePoint = (request: PointRequest) => client.put('/store/point', request);\n\nexport default client;\n","import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\ntype CardImgVariant = 'top' | 'bottom';\n\ninterface CardImgProps extends React.HTMLProps<HTMLImageElement> {\n    variant?: CardImgVariant;\n}\n\nexport const CardImg: React.FC<CardImgProps> = ({variant, src, alt}: CardImgProps) => {\n    const className = variant ? `card-img-${variant}` : 'card-img';\n\n    return (\n        <img className={className} src={src} alt={alt}/>\n    );\n};\n\ninterface CardHeaderProps extends React.HTMLProps<HTMLDivElement> {\n}\n\nexport const CardHeader: React.FC<CardHeaderProps> = ({children, ...rest}: CardHeaderProps) => {\n    return (\n        <div className=\"card-header\" {...rest}>{children}</div>\n    );\n};\n\ninterface CardTitleProps extends React.HTMLProps<HTMLHeadingElement> {\n}\n\nexport const CardTitle: React.FC<CardTitleProps> = ({children, ...rest}: CardTitleProps) => {\n    return (\n        <h5 className=\"card-title\" {...rest}>{children}</h5>\n    );\n};\n\ntype CardSubtitleProps = CardTitleProps;\n\nexport const CardSubtitle: React.FC<CardSubtitleProps> = ({children, ...rest}: CardSubtitleProps) => {\n    return (\n        <h6 className=\"card-subtitle mb-2 text-muted\" {...rest}>{children}</h6>\n    );\n};\n\ninterface CardBodyProps extends React.HTMLProps<HTMLDivElement> {\n}\n\nexport const CardBody: React.FC<CardBodyProps> = ({className, children, ...rest}: CardBodyProps) => {\n    return (\n        <div className={`card-body ${className}`} {...rest}>{children}</div>\n    );\n};\n\ntype CardFooterProps = CardHeaderProps;\n\nexport const CardFooter: React.FC<CardFooterProps> = ({children, ...rest}: CardFooterProps) => {\n    return (\n        <div className=\"card-footer\" {...rest}>{children}</div>\n    );\n};\n\ninterface CardProps extends React.HTMLProps<HTMLDivElement> {\n}\n\nconst Card: React.FC<CardProps> = ({className, children, ...rest}: CardProps) => {\n    return (\n        <div className={`card ${className}`} {...rest}>{children}</div>\n    );\n};\n\nexport default Card;\n","import React, {useCallback, useReducer} from \"react\";\r\n\r\ntype UseInputsAction = {\r\n    name: string;\r\n    value: string;\r\n};\r\n\r\nfunction reducer<T>(state: T, action: UseInputsAction | null) {\r\n    if (!action) {\r\n        const initialState: any = {};\r\n        Object.keys(state).forEach(key => {\r\n            initialState[key] = '';\r\n        });\r\n        return initialState;\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        [action.name]: action.value\r\n    };\r\n}\r\n\r\nexport default function useInputs<T>(defaultValues: T) {\r\n    const [state, dispatch] = useReducer(reducer, defaultValues);\r\n\r\n    const onChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(e.target);\r\n    }, []);\r\n\r\n    const onReset = useCallback(() => {\r\n        dispatch(null);\r\n    }, []);\r\n\r\n    return [state, onChange, onReset, dispatch] as [T, typeof onChange, typeof onReset, typeof dispatch];\r\n}\r\n","import {useCallback, useState} from \"react\";\n\nexport default function useArray<E>(initialArray: E[] = []) {\n    const [array, setArray] = useState<E[]>(initialArray);\n\n    const add = useCallback((e: E) => {\n        setArray([...array, e]);\n    }, [array]);\n\n    const remove = useCallback((e: E) => {\n        setArray(array.filter(a => a !== e));\n    }, [array]);\n\n    return [array, add, remove] as [E[], typeof add, typeof remove];\n}\n","import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ColorVariant from \"../types/ColorVariant\";\n\nexport interface AlertProps extends React.HTMLProps<HTMLDivElement> {\n    variant?: ColorVariant;\n}\n\nconst Alert: React.FC<AlertProps> = ({variant, className, children, ...rest}: AlertProps) => {\n    return (\n        <div className={`alert alert-${variant} ${className}`} role=\"alert\" {...rest}>{children}</div>\n    );\n};\n\nexport default Alert;\n","import React from \"react\";\r\nimport Alert, {AlertProps} from \"./Alert\";\r\n\r\ninterface AlertGroupProps {\r\n    alerts: AlertProps[];\r\n}\r\n\r\nconst AlertGroup: React.FC<AlertGroupProps> = ({alerts}: AlertGroupProps) => {\r\n    return (\r\n        <>\r\n            {alerts.map((alert, index) => (\r\n                <Alert {...alert} key={index}>{alert.children}</Alert>\r\n            ))}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default AlertGroup;\r\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport LabelInput from \"../components/LabelInput\";\nimport Button from \"../components/Button\";\nimport {register} from \"../modules/client\";\nimport Card, {CardBody, CardSubtitle, CardTitle} from \"../components/Card\";\nimport {AlertProps} from \"../components/Alert\";\nimport ColorVariant from \"../types/ColorVariant\";\nimport useInputs from \"../hooks/useInputs\";\nimport useArray from \"../hooks/useArray\";\nimport AlertGroup from \"../components/AlertGroup\";\n\nconst RegisterPage = () => {\n    const [inputs, onChange] = useInputs({\n        name: '',\n        email: ''\n    });\n\n    const {name, email} = inputs;\n\n    const [alerts, addAlert] = useArray<AlertProps>([]);\n\n    const requestRegister = async () => {\n        let variant: ColorVariant = 'primary';\n        let message = '';\n        try {\n            await register(name, email);\n            variant = 'success';\n            message = 'Please check your email.';\n        } catch (error) {\n            variant = 'danger';\n            // @ts-ignore\n            message = error.response.data.error.message;\n        } finally {\n            addAlert({variant: variant, children: message});\n        }\n    };\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md\"/>\n                <div className=\"col\">\n                    <h3 className=\"text-center\">Teriser</h3>\n                    <AlertGroup alerts={alerts}/>\n                </div>\n                <div className=\"col-md\"/>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-md\"/>\n                <div className=\"col\">\n                    <Card>\n                        <CardBody>\n                            <CardTitle className=\"text-center\">Register</CardTitle>\n                            <CardSubtitle className=\"text-center\">Create a Teriser account</CardSubtitle>\n                            <LabelInput label=\"Name\" name=\"name\" type=\"text\" placeholder=\"Teri Kim\" value={name}\n                                        onChange={onChange}/>\n                            <LabelInput label=\"Email\" name=\"email\" type=\"email\" placeholder=\"terikim@codrest.com\"\n                                        value={email}\n                                        onChange={onChange}/>\n                            <div className=\"d-grid gap-2\">\n                                <Button variant=\"primary\" onClick={() => requestRegister()}>Register</Button>\n                            </div>\n                            <p className=\"mt-3 mb-0 text-center\">Already have an account? <Link\n                                className=\"text-decoration-none\" to=\"/login\">Login</Link></p>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-md\"/>\n            </div>\n        </div>\n    );\n};\n\nexport default RegisterPage;\n","import React, {useState} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport LabelInput from \"../components/LabelInput\";\nimport Button from \"../components/Button\";\nimport {ClientResponse, login, LoginResult, setBearer} from \"../modules/client\";\nimport Card, {CardBody, CardSubtitle, CardTitle} from \"../components/Card\";\nimport useInputs from \"../hooks/useInputs\";\nimport useArray from \"../hooks/useArray\";\nimport {AlertProps} from \"../components/Alert\";\nimport AlertGroup from \"../components/AlertGroup\";\n\nconst LoginPage = () => {\n    const [inputs, onChange] = useInputs({\n        email: '',\n        loginToken: ''\n    });\n\n    const {email, loginToken} = inputs;\n\n    const [alerts, addAlert] = useArray<AlertProps>([]);\n\n    const onClick = async () => {\n        try {\n            const response = await login(email, loginToken);\n            if (step === 1) {\n                const loginResult = (response.data as ClientResponse<LoginResult>).response\n                if (loginResult) {\n                    setBearer(loginResult.token);\n                    localStorage.setItem('user', JSON.stringify(loginResult));\n                }\n            }\n            setStep((step + 1) % steps.length);\n        } catch (error) {\n            // @ts-ignore\n            const message = error.response.data.error.message;\n            addAlert({\n                variant: 'danger',\n                children: message\n            });\n        }\n    };\n\n    const [step, setStep] = useState<number>(0);\n\n    const steps = [\n        (<>\n            <LabelInput label=\"Email\" name=\"email\" type=\"email\" placeholder=\"terikim@codrest.com\" value={email}\n                        onChange={onChange}/>\n            <div className=\"d-grid gap-2\">\n                <Button variant=\"primary\" onClick={onClick}>Next</Button>\n            </div>\n            <p className=\"mt-3 mb-0 text-center\">Don't have an account? <Link\n                className=\"text-decoration-none\" to=\"/register\">Register</Link></p>\n        </>),\n        (<>\n            <p className=\"text-center\"><span className=\"btn border rounded-pill px-3 py-1\"\n                                             onClick={setStep.bind(this, step - 1)}>{email}</span></p>\n            <input className=\"d-none\" type=\"email\" name=\"email\" value={email}/>\n            <LabelInput label=\"LoginToken\" name=\"loginToken\" type=\"password\" value={loginToken} onChange={onChange}/>\n            <div className=\"d-grid gap-2\">\n                <Button variant=\"primary\" onClick={onClick}>Login</Button>\n            </div>\n        </>),\n        (\n            <p>Ok</p>\n        )\n    ];\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md\"/>\n                <div className=\"col\">\n                    <h3 className=\"text-center\">Teriser</h3>\n                    <AlertGroup alerts={alerts}/>\n                </div>\n                <div className=\"col-md\"/>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-md\"/>\n                <div className=\"col\">\n                    <Card>\n                        <CardBody>\n                            <CardTitle className=\"text-center\">Login</CardTitle>\n                            <CardSubtitle className=\"text-center\">Use your Teriser account</CardSubtitle>\n                            {steps[step]}\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-md\"/>\n            </div>\n        </div>\n    )\n}\n\nexport default LoginPage;\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {ClientResponse, logout, setBearer} from \"../modules/client\";\r\n\r\nconst LogoutPage = () => {\r\n    localStorage.removeItem('user');\r\n\r\n    logout().then((response) => {\r\n        console.log((response.data as ClientResponse<boolean>).response);\r\n    }).catch((error) => {\r\n        console.log(error);\r\n    });\r\n\r\n    setBearer();\r\n\r\n    return (\r\n        <Redirect to=\"/login\"/>\r\n    );\r\n};\r\n\r\nexport default LogoutPage;\r\n","import React, {useEffect, useState} from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {findAllPointCards, PointCard} from \"../modules/client\";\nimport Card, {CardBody, CardSubtitle, CardTitle} from \"../components/Card\";\nimport useArray from \"../hooks/useArray\";\nimport {Link} from \"react-router-dom\";\n\nconst PointCardsPage = () => {\n    const [pointCards, setPointCards] = useState<PointCard[]>([]);\n\n    const loadPointCards = async () => {\n        try {\n            const response = await findAllPointCards();\n            setPointCards(response.data.response);\n        } catch (e) {\n            alert(e);\n        }\n    };\n\n    useEffect(() => {\n        loadPointCards();\n    }, []);\n\n    const [array, add, remove] = useArray<PointCard>([]);\n\n    const togglePointCard = (pointCard: PointCard) => {\n        if (!array.includes(pointCard)) {\n            add(pointCard);\n        } else {\n            remove(pointCard);\n        }\n    };\n\n    return (\n        <>\n            <div className=\"container\">\n                <h3>Point Cards</h3>\n                <div className=\"row row-cols-2 row-cols-md-6\">\n                    {pointCards.map((pointCard, index) => (\n                        <div className=\"col p-2\" key={index}>\n                            <Card className={array.includes(pointCard) ? \"border-primary bg-primary bg-opacity-10\" : \"\"}\n                                  onClick={togglePointCard.bind(this, pointCard)}>\n                                <CardBody className={array.includes(pointCard) ? \"text-primary\" : \"\"}>\n                                    <CardTitle>{pointCard.name}</CardTitle>\n                                    <CardSubtitle>{pointCard.point}</CardSubtitle>\n                                    \\{pointCard.price}\n                                </CardBody>\n                            </Card>\n                        </div>\n                    ))}\n                </div>\n            </div>\n            <div className=\"py-5\"/>\n            <div className=\"fixed-bottom card shadow\">\n                <div className=\"container card-body d-flex justify-content-between\">\n                    <span>\n                        <span className=\"h6 text-muted\">Subtotal</span>\n                        <span className=\"h2 text-primary ms-1 ms-md-3\">\n                            \\{array.map(e => e.price).reduce((accumulator, currentValue) => accumulator + currentValue, 0)}\n                        </span>\n                    </span>\n                    <Link className=\"btn btn-primary\" to={{\n                        pathname: '/checkout',\n                        state: {\n                            cart: array\n                        }\n                    }}>\n                        Checkout {array.length > 0 ?\n                        <span className=\"badge text-primary bg-white\">{array.length}</span> : undefined}\n                    </Link>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default PointCardsPage;\n","import React, {useState} from \"react\";\nimport {RequestPayResponse} from \"iamport-typings\";\nimport Button from \"../components/Button\";\nimport LabelInput from \"../components/LabelInput\";\nimport useInputs from \"../hooks/useInputs\";\nimport {RouteComponentProps} from \"react-router-dom\";\nimport {chargePoint, ClientResponse, Payment, PaymentPointCard, PointCard, requestPayment} from \"../modules/client\";\nimport {importIamport, userCode} from \"../modules/iamport\";\n\ninterface CheckoutPageProps {\n    cart: Array<PointCard>;\n}\n\nconst CheckoutPage = (props: RouteComponentProps) => {\n    const cart = props.location.state ? (props.location.state as CheckoutPageProps).cart : [];\n    const amount = cart.map(e => e.price).reduce((accumulator, currentValue) => accumulator + currentValue, 0);\n\n    const [inputs, onChange] = useInputs({\n        buyer_email: '',\n        buyer_name: '',\n        buyer_tel: ''\n    });\n    const {buyer_email, buyer_name, buyer_tel} = inputs;\n    const [pay_method, set_pay_method] = useState<string>('card');\n\n    importIamport();\n\n    const requestPay = async () => {\n        if (cart.length === 0) {\n            return;\n        }\n\n        const paymentItems: Array<PaymentPointCard> = [];\n        cart.forEach(e => {\n            paymentItems.push({\n                id: e.seq,\n                quantity: 1\n            });\n        });\n\n        try {\n            const response = await requestPayment(paymentItems);\n            const payment = (response.data as ClientResponse<Payment>).response;\n\n            const {IMP} = window;\n\n            if (payment && IMP) {\n                const {orderId: merchant_uid, name} = payment;\n\n                IMP.init(userCode);\n                IMP.request_pay({\n                    pg: 'kcp',\n                    pay_method,\n                    merchant_uid,\n                    name,\n                    amount,\n                    buyer_email,\n                    buyer_name,\n                    buyer_tel,\n                }, async (rsp: RequestPayResponse) => {\n                    if (rsp.success) {\n                        try {\n                            const data = await chargePoint({\n                                receiptId: rsp.imp_uid!!,\n                                orderId: rsp.merchant_uid\n                            });\n                            console.log(data);\n                            alert('Ok');\n                        } catch (e) {\n                            alert(e);\n                        }\n                    } else {\n                        alert(rsp.error_msg);\n                    }\n                });\n            }\n        } catch (e) {\n            alert(e);\n        }\n    };\n\n    return (\n        <div className=\"container\">\n            <div className=\"pt-1 pb-4\">\n                <h3>Teriser</h3>\n            </div>\n            <div className=\"row g-5\">\n                <div className=\"col-md-5 col-lg-4 order-md-last\">\n                    <h4 className=\"d-flex justify-content-between align-items-center mb-3\">\n                        <span className=\"text-primary\">Your cart</span>\n                        <span className=\"badge bg-primary rounded-pill\">{cart.length}</span>\n                    </h4>\n                    <ul className=\"list-group mb-3\">\n                        {cart.map((pointCard, index) => (\n                            <li className=\"list-group-item d-flex justify-content-between lh-sm\" key={index}>\n                                <div>\n                                    <h6 className=\"my-0\">{pointCard.name}</h6>\n                                    <small className=\"text-muted\">{pointCard.point}</small>\n                                </div>\n                                <span className=\"text-muted\">\\{pointCard.price}</span>\n                            </li>\n                        ))}\n                        <li className=\"list-group-item d-flex justify-content-between list-group-item-primary\">\n                            Total (KRW)\n                            <strong>\\{amount}</strong>\n                        </li>\n                    </ul>\n                    <div className=\"d-none d-md-block\">\n                        <div className=\"d-grid gap-2\">\n                            <Button variant=\"primary\" onClick={requestPay}>Continue to checkout</Button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-7 col-lg-8\">\n                    <h4>Billing address</h4>\n                    <LabelInput label=\"Name\" name=\"buyer_name\" value={buyer_name} onChange={onChange}/>\n                    <LabelInput label=\"Email\" name=\"buyer_email\" type=\"email\" value={buyer_email} onChange={onChange}/>\n                    <LabelInput label=\"Tel\" name=\"buyer_tel\" type=\"tel\" value={buyer_tel} onChange={onChange}/>\n                    <hr className=\"my-4\"/>\n                    <h4>Payment</h4>\n                    <div className=\"form-check\">\n                        <input className=\"form-check-input\" type=\"radio\" id=\"pay_method_card\" name=\"pay_method\"\n                               value=\"card\" defaultChecked={pay_method === 'card'}\n                               onClick={set_pay_method.bind(this, 'card')}/>\n                        <label className=\"form-check-label\" htmlFor=\"pay_method_card\">💳 Credit card</label>\n                    </div>\n                    <div className=\"form-check\">\n                        <input className=\"form-check-input\" type=\"radio\" id=\"pay_method_trans\" name=\"pay_method\"\n                               value=\"trans\" defaultChecked={pay_method === 'trans'}\n                               onClick={set_pay_method.bind(this, 'trans')}/>\n                        <label className=\"form-check-label\" htmlFor=\"pay_method_trans\">🏛 Real-time bank\n                            transfer</label>\n                    </div>\n                    <div className=\"form-check\">\n                        <input className=\"form-check-input\" type=\"radio\" id=\"pay_method_vbank\" name=\"pay_method\"\n                               value=\"vbank\" defaultChecked={pay_method === 'vbank'}\n                               onClick={set_pay_method.bind(this, 'vbank')}/>\n                        <label className=\"form-check-label\" htmlFor=\"pay_method_vbank\">🏛 Virtual account</label>\n                    </div>\n                    <div className=\"form-check\">\n                        <input className=\"form-check-input\" type=\"radio\" id=\"pay_method_phone\" name=\"pay_method\"\n                               value=\"phone\" defaultChecked={pay_method === 'phone'}\n                               onClick={set_pay_method.bind(this, 'phone')}/>\n                        <label className=\"form-check-label\" htmlFor=\"pay_method_phone\">📱 Mobile payment</label>\n                    </div>\n                    <hr className=\"my-4\"/>\n                    <div className=\"d-grid gap-2\">\n                        <Button variant=\"primary\" onClick={requestPay} className=\"btn-lg\">Continue to checkout</Button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default CheckoutPage;\n","export const userCode = 'imp44399565';\r\n\r\nexport function importIamport() {\r\n    const jqueryScript = document.createElement('script');\r\n    jqueryScript.src = 'https://code.jquery.com/jquery-3.6.0.js';\r\n    document.head.appendChild(jqueryScript);\r\n\r\n    const iamportScript = document.createElement('script');\r\n    iamportScript.src = 'https://cdn.iamport.kr/js/iamport.payment-1.2.0.js';\r\n    document.head.appendChild(iamportScript);\r\n}\r\n","import React from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport LabelInput from \"../components/LabelInput\";\r\nimport Button from \"../components/Button\";\r\nimport useInputs from \"../hooks/useInputs\";\r\nimport {addProject} from \"../modules/client\";\r\n\r\nconst AddProjectPage = () => {\r\n    const [inputs, onChange] = useInputs({\r\n        title: ''\r\n    });\r\n    const {title} = inputs;\r\n\r\n    const onClick = async () => {\r\n        try {\r\n            const response = await addProject({title});\r\n            console.log(response);\r\n            alert(response);\r\n        } catch (e) {\r\n            alert(e);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h3>Add Project</h3>\r\n            <LabelInput label=\"Title\" name=\"title\" value={title} onChange={onChange}/>\r\n            <Button variant=\"primary\" onClick={onClick}>Add project</Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddProjectPage;\r\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Route} from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport RegisterPage from \"./pages/RegisterPage\";\nimport LoginPage from \"./pages/LoginPage\";\nimport LogoutPage from \"./pages/LogoutPage\";\nimport PointCardsPage from \"./pages/PointCardsPage\";\nimport CheckoutPage from \"./pages/CheckoutPage\";\nimport AddProjectPage from \"./pages/AddProjectPage\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Route path=\"/\" exact={true} component={HomePage}/>\n            <Route path=\"/register\" component={RegisterPage}/>\n            <Route path=\"/login\" component={LoginPage}/>\n            <Route path=\"/logout\" component={LogoutPage}/>\n            <Route path=\"/point-cards\" component={PointCardsPage}/>\n            <Route path=\"/checkout\" component={CheckoutPage}/>\n            <Route path=\"/add-project\" component={AddProjectPage}/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}